#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
"""
import sqlite3
import os

def fix_orphaned_addresses():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏"""
    db_path = "kadastr.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –∞–¥—Ä–µ—Å–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏...")
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # 1. –ù–∞–π–¥–µ–º –∞–¥—Ä–µ—Å–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –≥–æ—Ä–æ–¥–∞–º–∏
        print("   üîç –ò—â—É –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–¥—Ä–µ—Å–∞...")
        cursor.execute('''
            SELECT a.id, a.id_client, a.id_city, a.address
            FROM address_info_client a
            LEFT JOIN city c ON a.id_city = c.id
            WHERE c.id IS NULL
        ''')
        
        orphaned_addresses = cursor.fetchall()
        
        if not orphaned_addresses:
            print("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            conn.close()
            return True
        
        print(f"   ‚ùå –ù–∞–π–¥–µ–Ω–æ {len(orphaned_addresses)} –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤:")
        for addr in orphaned_addresses:
            print(f"      ID: {addr[0]}, –ö–ª–∏–µ–Ω—Ç: {addr[1]}, –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥: {addr[2]}, –ê–¥—Ä–µ—Å: {addr[3]}")
        
        # 2. –°–æ–∑–¥–∞–µ–º "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π" –≥–æ—Ä–æ–¥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        cursor.execute("SELECT id FROM city WHERE city_name = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'")
        unknown_city = cursor.fetchone()
        
        if not unknown_city:
            print("   üìç –°–æ–∑–¥–∞—é –≥–æ—Ä–æ–¥ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'...")
            cursor.execute("INSERT INTO city (city_name) VALUES ('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')")
            unknown_city_id = cursor.lastrowid
        else:
            unknown_city_id = unknown_city[0]
        
        print(f"   üìç ID –≥–æ—Ä–æ–¥–∞ '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π': {unknown_city_id}")
        
        # 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
        print("   üîß –ò—Å–ø—Ä–∞–≤–ª—è—é –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–¥—Ä–µ—Å–∞...")
        cursor.execute('''
            UPDATE address_info_client 
            SET id_city = ? 
            WHERE id_city NOT IN (SELECT id FROM city)
        ''', (unknown_city_id,))
        
        fixed_count = cursor.rowcount
        print(f"   ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥—Ä–µ—Å–æ–≤: {fixed_count}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute('''
            SELECT COUNT(*) FROM address_info_client a
            LEFT JOIN city c ON a.id_city = c.id
            WHERE c.id IS NULL
        ''')
        
        remaining_orphans = cursor.fetchone()[0]
        
        if remaining_orphans == 0:
            print("‚úÖ –í—Å–µ –∞–¥—Ä–µ—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        else:
            print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–¥—Ä–µ—Å–∞: {remaining_orphans}")
        
        conn.commit()
        conn.close()
        
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_client_count():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    db_path = "kadastr.db"
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
        cursor.execute("SELECT COUNT(*) FROM info_client")
        total_clients = cursor.fetchone()[0]
        
        cursor.execute('''
            SELECT COUNT(*) FROM info_client c
            LEFT JOIN address_info_client a ON c.id = a.id_client
            LEFT JOIN city ci ON a.id_city = ci.id
            WHERE ci.id IS NOT NULL
        ''')
        clients_with_valid_addresses = cursor.fetchone()[0]
        
        cursor.execute('''
            SELECT COUNT(*) FROM info_client c
            LEFT JOIN address_info_client a ON c.id = a.id_client
        ''')
        clients_with_addresses = cursor.fetchone()[0]
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        print(f"   –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {total_clients}")
        print(f"   –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –∞–¥—Ä–µ—Å–∞–º–∏: {clients_with_addresses}")
        print(f"   –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –∞–¥—Ä–µ—Å–∞–º–∏: {clients_with_valid_addresses}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞: {e}")

def main():
    print("üõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤")
    print("=" * 40)
    
    if fix_orphaned_addresses():
        check_client_count()
        print("\n‚ñ∂Ô∏è –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python run.py")
    else:
        print("‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")

if __name__ == '__main__':
    main()