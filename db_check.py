#!/usr/bin/env python3
"""
–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ Flask –∫—ç—à–∞
"""
import sqlite3
import os

def direct_count_check():
    """–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π"""
    db_path = "kadastr.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print("üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # 1. –ü—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Å—á–µ—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        cursor.execute("SELECT COUNT(*) FROM info_client")
        total_clients = cursor.fetchone()[0]
        print(f"üìä –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ info_client: {total_clients}")
        
        # 2. –ü–æ–¥—Å—á–µ—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π created_at
        cursor.execute("SELECT COUNT(*) FROM info_client WHERE created_at IS NOT NULL")
        clients_with_date = cursor.fetchone()[0]
        print(f"üìÖ –ö–ª–∏–µ–Ω—Ç–æ–≤ —Å created_at: {clients_with_date}")
        
        cursor.execute("SELECT COUNT(*) FROM info_client WHERE created_at IS NULL")
        clients_without_date = cursor.fetchone()[0]
        print(f"‚ùå –ö–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ created_at: {clients_without_date}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT id, sur_name, name, created_at FROM info_client LIMIT 10")
        sample_clients = cursor.fetchall()
        print(f"\nüìã –ü–µ—Ä–≤—ã–µ 10 –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        for client in sample_clients:
            print(f"   ID: {client[0]}, {client[1]} {client[2]}, –¥–∞—Ç–∞: {client[3]}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT id, sur_name, name, created_at FROM info_client ORDER BY id DESC LIMIT 10")
        last_clients = cursor.fetchall()
        print(f"\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∫–ª–∏–µ–Ω—Ç–æ–≤:")
        for client in last_clients:
            print(f"   ID: {client[0]}, {client[1]} {client[2]}, –¥–∞—Ç–∞: {client[3]}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º JOIN –∑–∞–ø—Ä–æ—Å—ã –∫–∞–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        cursor.execute('''
            SELECT COUNT(*) FROM info_client c
            LEFT JOIN address_info_client a ON c.id = a.id_client
            LEFT JOIN city ci ON a.id_city = ci.id
        ''')
        join_count = cursor.fetchone()[0]
        print(f"\nüîó –° LEFT JOIN (address + city): {join_count}")
        
        cursor.execute('''
            SELECT COUNT(*) FROM info_client c
            INNER JOIN address_info_client a ON c.id = a.id_client
            INNER JOIN city ci ON a.id_city = ci.id
        ''')
        inner_join_count = cursor.fetchone()[0]
        print(f"üîó –° INNER JOIN (address + city): {inner_join_count}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞–¥—Ä–µ—Å–æ–≤
        cursor.execute('''
            SELECT COUNT(*) FROM info_client c
            LEFT JOIN address_info_client a ON c.id = a.id_client
            WHERE a.id_client IS NULL
        ''')
        no_address = cursor.fetchone()[0]
        print(f"‚ùå –ö–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞–¥—Ä–µ—Å–æ–≤: {no_address}")
        
        # 7. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞–¥—Ä–µ—Å–æ–≤
        if no_address > 0:
            cursor.execute('''
                SELECT c.id, c.sur_name, c.name FROM info_client c
                LEFT JOIN address_info_client a ON c.id = a.id_client
                WHERE a.id_client IS NULL
                LIMIT 5
            ''')
            no_addr_clients = cursor.fetchall()
            print(f"\n‚ùå –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ–∑ –∞–¥—Ä–µ—Å–æ–≤:")
            for client in no_addr_clients:
                print(f"   ID: {client[0]}, {client[1]} {client[2]}")
        
        conn.close()
        
        print(f"\nüí° –í—ã–≤–æ–¥—ã:")
        print(f"   - –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: {total_clients}")
        print(f"   - –° –∞–¥—Ä–µ—Å–∞–º–∏ –∏ –≥–æ—Ä–æ–¥–∞–º–∏ (INNER JOIN): {inner_join_count}")
        print(f"   - –†–∞–∑–Ω–∏—Ü–∞: {total_clients - inner_join_count}")
        
        if total_clients != inner_join_count:
            print(f"   ‚ö†Ô∏è Flask –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç {inner_join_count} –ø–æ—Ç–æ–º—É —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç INNER JOIN")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    direct_count_check()